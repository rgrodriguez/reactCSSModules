{"ast":null,"code":"import _classCallCheck from \"/Users/biomesimulator/Documents/Sites/react-udemy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/biomesimulator/Documents/Sites/react-udemy/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/biomesimulator/Documents/Sites/react-udemy/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/biomesimulator/Documents/Sites/react-udemy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/biomesimulator/Documents/Sites/react-udemy/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/biomesimulator/Documents/Sites/react-udemy/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/person';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      persons: [{\n        name: 'John',\n        age: 37\n      }, {\n        name: 'Peter',\n        age: 88\n      }, {\n        name: 'Josephine',\n        age: 56\n      }],\n      otherState: 'some other value',\n      showPersons: false\n    };\n\n    _this.switchNameHandler = function (newName) {\n      //console.log('I was clicked');\n      // Don't do this: this.state.persons[0].name = \"Omar\";\n      _this.setState({\n        persons: [{\n          name: newName,\n          age: 24\n        }, {\n          name: 'Peter',\n          age: 88\n        }, {\n          name: 'Josephine',\n          age: 56\n        }]\n      });\n    };\n\n    _this.nameChangedHandler = function (event) {\n      _this.setState({\n        persons: [{\n          name: 'John',\n          age: 24\n        }, {\n          name: event.target.value,\n          age: 88\n        }, {\n          name: 'Josephine',\n          age: 56\n        }]\n      });\n    };\n\n    _this.togglePersonsHandler = function () {\n      var doesShow = _this.state.showPersons;\n\n      _this.setState({\n        showPersons: !doesShow\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var style = {\n        backgroundColor: 'white',\n        font: 'inherit',\n        border: '1px solid blue',\n        padding: '8px',\n        cursor: 'pointer'\n      };\n      var persons = null;\n\n      if (this.state.showPersons) {\n        persons = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, this.state.persons.map(function (person) {\n          return React.createElement(Person, {\n            name: person.name,\n            age: person.age,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          });\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Hey baby, I'm a React App!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"And you're still learning!\"), React.createElement(\"button\", {\n        style: style,\n        onClick: this.togglePersonsHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Switch Name\"), persons);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/biomesimulator/Documents/Sites/react-udemy/src/App.js"],"names":["React","Component","Person","App","state","persons","name","age","otherState","showPersons","switchNameHandler","newName","setState","nameChangedHandler","event","target","value","togglePersonsHandler","doesShow","style","backgroundColor","font","border","padding","cursor","map","person"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE,CACP;AAAEC,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,GAAG,EAAE;AAArB,OADO,EAEP;AAAED,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,GAAG,EAAE;AAAtB,OAFO,EAGP;AAAED,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,GAAG,EAAE;AAA1B,OAHO,CADH;AAMNC,MAAAA,UAAU,EAAE,kBANN;AAONC,MAAAA,WAAW,EAAE;AAPP,K;;UAURC,iB,GAAoB,UAACC,OAAD,EAAa;AAC/B;AACA;AACA,YAAKC,QAAL,CAAc;AACZP,QAAAA,OAAO,EAAE,CACP;AAAEC,UAAAA,IAAI,EAAEK,OAAR;AAAiBJ,UAAAA,GAAG,EAAE;AAAtB,SADO,EAEP;AAAED,UAAAA,IAAI,EAAE,OAAR;AAAiBC,UAAAA,GAAG,EAAE;AAAtB,SAFO,EAGP;AAAED,UAAAA,IAAI,EAAE,WAAR;AAAqBC,UAAAA,GAAG,EAAE;AAA1B,SAHO;AADG,OAAd;AAOD,K;;UAEDM,kB,GAAqB,UAACC,KAAD,EAAW;AAC9B,YAAKF,QAAL,CAAc;AACZP,QAAAA,OAAO,EAAE,CACP;AAAEC,UAAAA,IAAI,EAAE,MAAR;AAAgBC,UAAAA,GAAG,EAAE;AAArB,SADO,EAEP;AAAED,UAAAA,IAAI,EAAEQ,KAAK,CAACC,MAAN,CAAaC,KAArB;AAA4BT,UAAAA,GAAG,EAAE;AAAjC,SAFO,EAGP;AAAED,UAAAA,IAAI,EAAE,WAAR;AAAqBC,UAAAA,GAAG,EAAE;AAA1B,SAHO;AADG,OAAd;AAOD,K;;UAEDU,oB,GAAuB,YAAM;AAC3B,UAAMC,QAAQ,GAAG,MAAKd,KAAL,CAAWK,WAA5B;;AACA,YAAKG,QAAL,CAAc;AAACH,QAAAA,WAAW,EAAE,CAACS;AAAf,OAAd;AACD,K;;;;;;;6BAGQ;AACP,UAAMC,KAAK,GAAG;AACZC,QAAAA,eAAe,EAAE,OADL;AAEZC,QAAAA,IAAI,EAAE,SAFM;AAGZC,QAAAA,MAAM,EAAE,gBAHI;AAIZC,QAAAA,OAAO,EAAE,KAJG;AAKZC,QAAAA,MAAM,EAAE;AALI,OAAd;AAQA,UAAInB,OAAO,GAAG,IAAd;;AAEA,UAAI,KAAKD,KAAL,CAAWK,WAAf,EAA4B;AAC1BJ,QAAAA,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,KAAKD,KAAL,CAAWC,OAAX,CAAmBoB,GAAnB,CAAuB,UAAAC,MAAM,EAAI;AAChC,iBAAO,oBAAC,MAAD;AAAQ,YAAA,IAAI,EAAEA,MAAM,CAACpB,IAArB;AAA2B,YAAA,GAAG,EAAEoB,MAAM,CAACnB,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,SAFA,CADD,CADF;AAOD;;AAED,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFF,EAGE;AACE,QAAA,KAAK,EAAEY,KADT;AAEE,QAAA,OAAO,EAAE,KAAKF,oBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,EAMGZ,OANH,CADF;AAUD;;;;EAtEeJ,S;;AAyElB,eAAeE,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/person';\n\nclass App extends Component {\n  state = {\n    persons: [\n      { name: 'John', age: 37 },\n      { name: 'Peter', age: 88 },\n      { name: 'Josephine', age: 56 }\n    ],\n    otherState: 'some other value',\n    showPersons: false\n  }\n\n  switchNameHandler = (newName) => {\n    //console.log('I was clicked');\n    // Don't do this: this.state.persons[0].name = \"Omar\";\n    this.setState({\n      persons: [\n        { name: newName, age: 24 },\n        { name: 'Peter', age: 88 },\n        { name: 'Josephine', age: 56 }\n      ]\n    })\n  }\n\n  nameChangedHandler = (event) => {\n    this.setState({\n      persons: [\n        { name: 'John', age: 24 },\n        { name: event.target.value, age: 88 },\n        { name: 'Josephine', age: 56 }\n      ]\n    })\n  }\n\n  togglePersonsHandler = () => {\n    const doesShow = this.state.showPersons;\n    this.setState({showPersons: !doesShow});\n  }\n\n\n  render() {\n    const style = {\n      backgroundColor: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer'\n    }\n\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = (\n        <div>\n        {this.state.persons.map(person => {\n          return <Person name={person.name} age={person.age}/>\n        })}\n      </div>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Hey baby, I'm a React App!</h1>\n        <p>And you're still learning!</p>\n        <button\n          style={style}\n          onClick={this.togglePersonsHandler}>Switch Name</button>\n        {persons}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}