{"ast":null,"code":"import _toConsumableArray from \"/Users/biomesimulator/Documents/Sites/react-udemy/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/biomesimulator/Documents/Sites/react-udemy/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/biomesimulator/Documents/Sites/react-udemy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/biomesimulator/Documents/Sites/react-udemy/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/biomesimulator/Documents/Sites/react-udemy/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/biomesimulator/Documents/Sites/react-udemy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/biomesimulator/Documents/Sites/react-udemy/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/biomesimulator/Documents/Sites/react-udemy/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/person';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      persons: [{\n        id: 'wer234',\n        name: 'John',\n        age: 37\n      }, {\n        id: 'ryr888',\n        name: 'Peter',\n        age: 88\n      }, {\n        id: 'bon959',\n        name: 'Josephine',\n        age: 56\n      }],\n      otherState: 'some other value',\n      showPersons: false\n      /*\n        switchNameHandler = (newName) => {\n          //console.log('I was clicked');\n          // Don't do this: this.state.persons[0].name = \"Omar\";\n          this.setState({\n            persons: [\n              { name: newName, age: 24 },\n              { name: 'Peter', age: 88 },\n              { name: 'Josephine', age: 56 }\n            ]\n          })\n        }\n      */\n\n    };\n\n    _this.nameChangedHandler = function (event, id) {\n      var personIndex = _this.state.persons.findIndex(function (p) {\n        return p.id === id;\n      });\n\n      var person = _objectSpread({}, _this.state.persons[personIndex]);\n\n      person.name = event.target.value;\n\n      var persons = _toConsumableArray(_this.state.persons);\n\n      persons[personIndex] = person;\n\n      _this.setState({\n        persons: persons\n      });\n    };\n\n    _this.deletePersonHandler = function (personIndex) {\n      //const persons = this.state.persons;\n      var persons = _toConsumableArray(_this.state.persons);\n\n      persons.splice(personIndex, 1);\n\n      _this.setState({\n        persons: persons\n      });\n    };\n\n    _this.togglePersonsHandler = function () {\n      var doesShow = _this.state.showPersons;\n\n      _this.setState({\n        showPersons: !doesShow\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var style = {\n        backgroundColor: 'green',\n        color: 'white',\n        font: 'inherit',\n        border: '1px solid blue',\n        padding: '8px',\n        cursor: 'pointer',\n        ':hover': {\n          backgroundColor: 'lightgreen',\n          color: 'black'\n        }\n      };\n      var persons = null;\n\n      if (this.state.showPersons) {\n        persons = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, this.state.persons.map(function (person, index) {\n          return React.createElement(Person, {\n            click: function click() {\n              return _this2.deletePersonHandler(index);\n            },\n            name: person.name,\n            age: person.age,\n            key: person.id,\n            changed: function changed(event) {\n              return _this2.nameChangedHandler(event, person.id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          });\n        }));\n        style.backgroundColor = 'red';\n      }\n\n      var classes = [];\n\n      if (this.state.persons.length <= 2) {\n        classes.push('red');\n      }\n\n      if (this.state.persons.length <= 1) {\n        classes.push('bold');\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Hey baby, I'm a React App!\"), React.createElement(\"p\", {\n        className: classes.join(' '),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"And you're still learning!\"), React.createElement(\"button\", {\n        style: style,\n        onClick: this.togglePersonsHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Toggle Persons\"), persons);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/biomesimulator/Documents/Sites/react-udemy/src/App.js"],"names":["React","Component","Person","App","state","persons","id","name","age","otherState","showPersons","nameChangedHandler","event","personIndex","findIndex","p","person","target","value","setState","deletePersonHandler","splice","togglePersonsHandler","doesShow","style","backgroundColor","color","font","border","padding","cursor","map","index","classes","length","push","join"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/person';\n\nclass App extends Component {\n  state = {\n    persons: [\n      { id: 'wer234', name: 'John', age: 37 },\n      { id: 'ryr888', name: 'Peter', age: 88 },\n      { id: 'bon959', name: 'Josephine', age: 56 }\n    ],\n    otherState: 'some other value',\n    showPersons: false\n  }\n\n/*\n  switchNameHandler = (newName) => {\n    //console.log('I was clicked');\n    // Don't do this: this.state.persons[0].name = \"Omar\";\n    this.setState({\n      persons: [\n        { name: newName, age: 24 },\n        { name: 'Peter', age: 88 },\n        { name: 'Josephine', age: 56 }\n      ]\n    })\n  }\n*/\n\n  nameChangedHandler = ( event, id ) => {\n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id;\n    });\n\n    const person = {\n      ...this.state.persons[personIndex]\n    };\n\n    person.name = event.target.value;\n\n    const persons = [...this.state.persons];\n    persons[personIndex] = person;\n\n    this.setState( { persons: persons} );\n  }\n\n  deletePersonHandler = (personIndex) => {\n    //const persons = this.state.persons;\n    const persons = [...this.state.persons];\n    persons.splice(personIndex, 1);\n    this.setState({persons: persons});\n  }\n\n  togglePersonsHandler = () => {\n    const doesShow = this.state.showPersons;\n    this.setState({showPersons: !doesShow});\n  }\n\n\n  render() {\n    const style = {\n      backgroundColor: 'green',\n      color: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer',\n      ':hover': {\n        backgroundColor: 'lightgreen',\n        color: 'black'\n      }\n    };\n\n\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = (\n        <div>\n        {this.state.persons.map((person, index) => {\n          return <Person\n            click={() => this.deletePersonHandler(index)}\n            name={person.name}\n            age={person.age}\n            key={person.id}\n            changed={(event) => this.nameChangedHandler(event, person.id)}/>\n        })}\n      </div>\n      );\n\n      style.backgroundColor = 'red';\n    }\n\n    const classes = [];\n    if (this.state.persons.length <= 2) {\n      classes.push('red');\n    }\n    if (this.state.persons.length <= 1) {\n      classes.push('bold');\n    }\n\n    return (\n        <div className=\"App\">\n          <h1>Hey baby, I'm a React App!</h1>\n          <p className={classes.join(' ')}>And you're still learning!</p>\n          <button\n            style={style}\n            onClick={this.togglePersonsHandler}>Toggle Persons</button>\n          {persons}\n        </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}